{"version":3,"sources":["other/context.js","components/ListPanel/CardBlock/CardBlock.jsx","components/ListPanel/CardBlock/CardBlockContainer.jsx","components/ListPanel/ListPanel.jsx","components/ListPanel/ListPanelContainer.jsx","components/SortPanel/CompanyBlock/CompanyBlock.jsx","components/SortPanel/CompanyBlock/CompanyBlockContainer.jsx","components/SortPanel/FilterBlock/FilterBlock.jsx","components/SortPanel/FilterBlock/FilterBlockContainer.jsx","components/SortPanel/PriceBlock/PriceBlock.jsx","components/SortPanel/PriceBlock/PriceBlockContainer.jsx","components/SortPanel/SortBlock/SortBlock.jsx","components/SortPanel/SortBlock/SortBlockContainer.jsx","components/SortPanel/SortPanel.jsx","components/SortPanel/SortPanelContainer.jsx","redux/listReducer.js","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["Context","React","createContext","CardBlock","data","formatAirDate","deltaDate","className","style","card_block","card_block_header","carrier","caption","price_adult","price","total","amount","for_adult","card_block_info","arrival_block","legs","segments","length","departureCity","departureAirport","blue_text","uid","arrivalCity","arrivalAirport","time_block","departureDate","arrivalDate","transfer_message","line","orange_text","airline_str","airline","deport_block","card_btn_block","card_btn","CardBlockContainer","sortBlock","useContext","string","timestamp","Date","parse","date","month","getMonth","day","getDate","time","toLocaleTimeString","hour","minute","0","1","2","3","4","5","6","7","8","9","10","11","getDay","firstDate","secondDate","onePice","oneDate","firstTime","split","twoPice","twoDate","secondTime","deltaHours","deltaMinutes","sumMin","data-minutes","ListPanel","getMoreItems","itemNum","list_panel","flights","map","item","indexOf","flight","onClick","ListPanelContainer","useState","setItem","CompanyBlock","companyFilter","companySort","getMinPrice","company_block","company_input","company_str","type","value","company","CompanyBlockContainer","companies","name","prices","filter","minimum","i","Math","min","FilterBlock","sort","transferFilter","filter_block","filter_input","description","FilterBlockContainer","PriceBlock","minPriceFilter","maxPriceFilter","price_block","price_input","minPrice","onChange","maxPrice","PriceBlockContainer","SortBlock","sortGrowPrice","sortDigPrice","sortTime","sort_block","sort_input","SortBlockContainer","SortPanel","sortPanel","SortPanelContainer","SET_LIST","SET_MIN_PRICE_FILTER","SET_MAX_PRICE_FILTER","SET_SORT_GROW_PRICE","SET_SORT_DIG_PRICE","SET_SORT_TIME","SET_FILTER","SET_COMPANY","SET_COMPANY_FILTER","SET_FILTER_TRAVEL","SET_FILTER_TRAVEL_ACTION","setListAC","result","listReducer","state","action","test","a","b","getDelta","checked","every","el","arr1","arr2","checkArr","App","useReducer","dispatch","useEffect","Provider","event","currentTarget","target","setCompanyAC","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c54d8c7d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Context = React.createContext()","import React from 'react'\r\nimport style from './../.././../App.module.css'\r\n\r\nconst CardBlock = ({ data, formatAirDate, deltaDate }) => {\r\n    return (\r\n        <div className={style.card_block}>\r\n            <div className={style.card_block_header}>\r\n                <div>logo {data.carrier.caption}</div>\r\n                <div className={style.price_adult}>\r\n                    <div>{data.price.total.amount} &#8381;</div>\r\n                    <div className={style.for_adult}>Cтоимость для одного взрослого пассажира</div>\r\n                </div>\r\n            </div>\r\n            <div className={style.card_block_info}>\r\n                <div className={style.arrival_block}>\r\n                    <div>\r\n                        {\r\n                            data.legs[0].segments.length == 1\r\n                                ? <div>\r\n                                    <span>{data.legs[0].segments[0].departureCity.caption}, {data.legs[0].segments[0].departureAirport.caption} <span className={style.blue_text}>({data.legs[0].segments[0].departureAirport.uid})\r\n                         &#8594; </span>\r\n                                        {data.legs[0].segments[0].arrivalCity.caption}, {data.legs[0].segments[0].arrivalAirport.caption} <span className={style.blue_text}>({data.legs[0].segments[0].arrivalAirport.uid})</span>\r\n                                    </span>\r\n                                </div>\r\n                                : <div>\r\n                                    <span>{data.legs[0].segments[0].departureCity.caption}, {data.legs[0].segments[0].departureAirport.caption} <span className={style.blue_text}>({data.legs[0].segments[0].departureAirport.uid})\r\n                         &#8594; </span>\r\n                                        {data.legs[0].segments[data.legs[0].segments.length - 1].arrivalCity.caption}, {data.legs[0].segments[data.legs[0].segments.length - 1].arrivalAirport.caption} <span className={style.blue_text}>({data.legs[0].segments[data.legs[0].segments.length - 1].arrivalAirport.uid})</span>\r\n                                    </span>\r\n                                </div>\r\n\r\n                        }\r\n                    </div>\r\n                    {\r\n                        data.legs[0].segments.length == 2\r\n                            ? <div className={style.time_block}>\r\n                                <div>{formatAirDate(data.legs[0].segments[0].departureDate)}</div>\r\n                                <div>\r\n                                    {deltaDate(data.legs[0].segments[0].departureDate, data.legs[0].segments[1].arrivalDate)}\r\n                                </div>\r\n                                <div>{formatAirDate(data.legs[0].segments[1].arrivalDate)}</div>\r\n                            </div>\r\n                            : <div className={style.time_block}>\r\n                                <div>{formatAirDate(data.legs[0].segments[0].departureDate)}</div>\r\n                                <div>\r\n                                    {deltaDate(data.legs[0].segments[0].departureDate, data.legs[0].segments[0].arrivalDate)}\r\n                                </div>\r\n                                <div>{formatAirDate(data.legs[0].segments[0].arrivalDate)}</div>\r\n                            </div>\r\n\r\n                    }\r\n                    <div className={style.transfer_message}>\r\n                        {\r\n                            data.legs[0].segments.length == 1\r\n                                ? <span className={style.line}></span>\r\n                                : <span>&#9719;<span className={style.orange_text}> 1 пересадка</span></span>\r\n                        }\r\n                    </div>\r\n                    <div className={style.airline_str}>\r\n                        <span>Рейс выполняет: {data.legs[0].segments[0].airline.caption}</span>\r\n                    </div>\r\n                </div>\r\n                <div className={style.deport_block}>\r\n                    <div>\r\n                        {\r\n                            data.legs[1].segments.length == 1\r\n                                ? <div>\r\n                                    <span>{data.legs[1].segments[0].departureCity.caption}, {data.legs[1].segments[0].departureAirport.caption} <span className={style.blue_text}>({data.legs[1].segments[0].departureAirport.uid})\r\n                         &#8594; </span>\r\n                                        {data.legs[1].segments[0].arrivalCity.caption}, {data.legs[1].segments[0].arrivalAirport.caption} <span className={style.blue_text}>({data.legs[1].segments[0].arrivalAirport.uid})</span>\r\n                                    </span>\r\n                                </div>\r\n                                : <div>\r\n                                    <span>{data.legs[1].segments[0].departureCity.caption}, {data.legs[1].segments[0].departureAirport.caption} <span className={style.blue_text}>({data.legs[1].segments[0].departureAirport.uid})\r\n                         &#8594; </span>\r\n                                        {data.legs[1].segments[data.legs[1].segments.length - 1].arrivalCity.caption}, {data.legs[1].segments[data.legs[1].segments.length - 1].arrivalAirport.caption} <span className={style.blue_text}>({data.legs[1].segments[data.legs[1].segments.length - 1].arrivalAirport.uid})</span>\r\n                                    </span>\r\n                                </div>\r\n\r\n                        }\r\n                    </div>\r\n                    {\r\n                        data.legs[1].segments.length == 2\r\n                            ? <div className={style.time_block}>\r\n                                <div>{formatAirDate(data.legs[1].segments[0].departureDate)}</div>\r\n                                <div>\r\n                                    {deltaDate(data.legs[1].segments[0].departureDate, data.legs[1].segments[1].arrivalDate)}\r\n                                </div>\r\n                                <div>{formatAirDate(data.legs[1].segments[1].arrivalDate)}</div>\r\n                            </div>\r\n                            : <div className={style.time_block}>\r\n                                <div>{formatAirDate(data.legs[1].segments[0].departureDate)}</div>\r\n                                <div>\r\n                                    {deltaDate(data.legs[1].segments[0].departureDate, data.legs[1].segments[0].arrivalDate)}\r\n                                </div>\r\n                                <div>{formatAirDate(data.legs[1].segments[0].arrivalDate)}</div>\r\n                            </div>\r\n                    }\r\n\r\n                    <div className={style.transfer_message}>\r\n                        {\r\n                            data.legs[1].segments.length == 1\r\n                            ? <span className={style.line}></span>\r\n                            : <span>&#9719;<span className={style.orange_text}> 1 пересадка</span></span>\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <span>Рейс выполняет: {data.legs[1].segments[0].airline.caption}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={style.card_btn_block}>\r\n                <button className={style.card_btn}>Выбрать</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardBlock","import React, { useContext } from 'react'\r\nimport { Context } from '../../../other/context'\r\nimport CardBlock from './CardBlock'\r\nimport style from './../../../App.module.css'\r\n\r\nconst CardBlockContainer = ({ data }) => {\r\n\r\n    const { sortBlock } = useContext(Context)\r\n\r\n    function formatAirDate(string) {\r\n        const months = {\r\n            0: 'янв.',\r\n            1: 'фев.',\r\n            2: 'март',\r\n            3: 'апр.',\r\n            4: 'маq',\r\n            5: 'июнь',\r\n            6: 'июль',\r\n            7: 'авг.',\r\n            8: 'сен.',\r\n            9: 'окт.',\r\n            10: 'нояб.',\r\n            11: 'дек.'\r\n        };\r\n\r\n        const days = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб']\r\n\r\n        let timestamp = Date.parse(string);\r\n        let date = new Date(timestamp);\r\n        let month = date.getMonth();\r\n        let day = date.getDate();\r\n        let time = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n        return <div>{time}<span className={style.blue_text}> {day} {months[month]} {days[date.getDay()]}</span></div>\r\n    }\r\n\r\n    function deltaDate(firstDate, secondDate) {\r\n        let onePice = Date.parse(firstDate)\r\n        let oneDate = new Date(onePice)\r\n        let oneDay = oneDate.getDate()\r\n        let firstTime = oneDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }).split(':')\r\n\r\n        let twoPice = Date.parse(secondDate)\r\n        let twoDate = new Date(twoPice)\r\n        let twoDay = twoDate.getDate()\r\n        let secondTime = twoDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }).split(':')\r\n\r\n        let deltaHours = secondTime[0] - firstTime[0]\r\n        let deltaMinutes = secondTime[1] - firstTime[1]\r\n\r\n        if (deltaMinutes < 0) {\r\n            deltaHours = deltaHours - 1\r\n            deltaMinutes = 60 + deltaMinutes\r\n        }\r\n\r\n        if (deltaHours < 0) {\r\n            deltaHours = 24 + deltaHours\r\n        }\r\n\r\n        let sumMin = deltaHours * 60 + deltaMinutes\r\n        return <div data-minutes = {sumMin} >{deltaHours} ч {deltaMinutes} мин</div>\r\n    }\r\n\r\n    return (\r\n        <CardBlock data={data}\r\n            price={sortBlock.price}\r\n            formatAirDate={formatAirDate}\r\n            deltaDate={deltaDate} />\r\n    )\r\n}\r\n\r\nexport default CardBlockContainer\r\n\r\n","import React from 'react'\r\nimport style from './../../App.module.css'\r\nimport CardBlockContainer from './CardBlock/CardBlockContainer'\r\n\r\nconst ListPanel = ({ price, data, getMoreItems, itemNum }) => {\r\n\r\n    return (\r\n        <div className={style.list_panel}>\r\n            {   data.length == 0\r\n                ? <div>Not found</div>\r\n                : data.flights.map(item => {\r\n                    if (data.flights.indexOf(item) <= itemNum - 1) {\r\n                        return <CardBlockContainer data={item.flight}\r\n                            price={price} />\r\n                    }\r\n                }\r\n                )\r\n            }\r\n            <div><button onClick={getMoreItems}>Показать еще</button></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListPanel\r\n","import React, { useContext, useState } from 'react'\r\nimport { Context } from '../../other/context'\r\nimport ListPanel from './ListPanel'\r\n\r\nconst ListPanelContainer = () => {\r\n\r\n    const {data} = useContext(Context)\r\n    const [item, setItem] = useState(2)\r\n\r\n    const getMoreItems = () => {\r\n        setItem(item + 2)\r\n    }\r\n\r\n    return (\r\n        <ListPanel data={data}\r\n        getMoreItems={getMoreItems}\r\n        itemNum={item}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ListPanelContainer","import React from 'react'\r\nimport style from './../../../App.module.css'\r\n\r\nconst CompanyBlock = ({ companyFilter, companySort, getMinPrice, data }) => {\r\n    return (\r\n        <div className={style.company_block}>\r\n            <h4>Авиакомпании</h4>\r\n            <div className={style.company_input}>\r\n                {\r\n                    companySort.map(item => <span className={style.company_str}><input type='checkbox'\r\n                        onClick={companyFilter}\r\n                        value={item.company} />{item.company}<span> от {data.length == 0 ? '0' : getMinPrice(item.company)}</span></span>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanyBlock","import React, { useContext } from 'react'\r\nimport { Context } from '../../../other/context'\r\nimport CompanyBlock from './CompanyBlock'\r\n\r\nconst CompanyBlockContainer = () => {\r\n\r\n    const { companyFilter, sortBlock, data } = useContext(Context)\r\n\r\n    const getMinPrice = (name) => {\r\n        let prices = data.flights\r\n            .filter(item => item.flight.carrier.caption == name)\r\n            .map(item => item.flight.price.total.amount)\r\n        let minimum = prices[0]\r\n        for (let i = 1; i < prices.length; i++) {\r\n            minimum = Math.min(minimum, prices[i])\r\n        }\r\n        return minimum\r\n\r\n    }\r\n\r\n    return (\r\n        <CompanyBlock companyFilter={companyFilter}\r\n            companySort={sortBlock.companies}\r\n            getMinPrice={getMinPrice}\r\n            data={data} />\r\n    )\r\n}\r\n\r\nexport default CompanyBlockContainer\r\n\r\n","import React from 'react'\r\nimport style from './../../../App.module.css'\r\n\r\nconst FilterBlock = ({ sort, transferFilter }) => {\r\n    return (\r\n        <div className={style.filter_block}>\r\n            Фильтровать<h4>Фильтровать</h4>\r\n            <div className={style.filter_input}>\r\n                {\r\n                    sort.map(item => <span><input type='checkbox' value={item.segments} onClick={transferFilter}/>{item.description}</span>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterBlock","import React, { useContext } from 'react'\r\nimport { Context } from '../../../other/context'\r\nimport FilterBlock from './FilterBlock'\r\n\r\nconst FilterBlockContainer = () => {\r\n\r\n    const { sortBlock, transferFilter } = useContext(Context)\r\n    return (\r\n        <FilterBlock sort={sortBlock.filter}\r\n            transferFilter={transferFilter} />\r\n    )\r\n}\r\n\r\nexport default FilterBlockContainer","import React from 'react'\r\nimport style from './../../../App.module.css'\r\n\r\nconst PriceBlock = ({sort, minPriceFilter, maxPriceFilter}) => {\r\n    return (\r\n        <div className={style.price_block}>\r\n            <h4>Цена</h4>\r\n            <div className={style.price_input}>\r\n                <span>От <input type='text' value={sort.minPrice} onChange={minPriceFilter}/></span>\r\n                <span>До <input type='text' value={sort.maxPrice} onChange={maxPriceFilter}/></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PriceBlock","import React, { useContext } from 'react'\r\nimport { Context } from '../../../other/context'\r\nimport PriceBlock from './PriceBlock'\r\n\r\nconst PriceBlockContainer = ({sort}) => {\r\n\r\n    const {minPriceFilter, maxPriceFilter} = useContext(Context)\r\n\r\n    return (\r\n        <PriceBlock sort={sort} minPriceFilter={minPriceFilter} maxPriceFilter={maxPriceFilter}/>\r\n    )\r\n}\r\n\r\nexport default PriceBlockContainer","import React from 'react'\r\nimport style from './../../../App.module.css'\r\n\r\nconst SortBlock = ({ sortGrowPrice, sortDigPrice, sortTime }) => {\r\n    return (\r\n        <div className={style.sort_block}>\r\n            <h4>Сортировать</h4>\r\n            <div className={style.sort_input}>\r\n                <span><input type='radio' name='sort' value='rad1' onClick={sortGrowPrice}/>- по возрастанию цены</span>\r\n                <span><input type='radio' name='sort' value='rad2' onClick={sortDigPrice}/>- по убыванию цены</span>\r\n                <span><input type='radio' name='sort' value='rad3' onClick={sortTime}/>- по времени в пути</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SortBlock","import React, { useContext } from 'react'\r\nimport { Context } from '../../../other/context'\r\nimport SortBlock from './SortBlock'\r\n\r\nconst SortBlockContainer = () => {\r\n\r\n    const { sortGrowPrice, sortDigPrice, sortTime } = useContext(Context)\r\n\r\n    return (\r\n        <SortBlock sortGrowPrice={sortGrowPrice}\r\n            sortDigPrice={sortDigPrice}\r\n            sortTime={sortTime} />\r\n    )\r\n}\r\n\r\nexport default SortBlockContainer","import React from 'react'\r\nimport style from './../../App.module.css'\r\nimport CompanyBlockContainer from './CompanyBlock/CompanyBlockContainer'\r\nimport FilterBlockContainer from './FilterBlock/FilterBlockContainer'\r\nimport PriceBlockContainer from './PriceBlock/PriceBlockContainer'\r\nimport SortBlockContainer from './SortBlock/SortBlockContainer'\r\n\r\nconst SortPanel = ({sortBlock}) => {\r\n    return (\r\n        <div className={style.sortPanel}>\r\n            <SortBlockContainer />\r\n            <FilterBlockContainer/>\r\n            <PriceBlockContainer sort={sortBlock.price}/>\r\n            <CompanyBlockContainer sort={sortBlock.company}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SortPanel","import React, { useContext } from 'react'\r\nimport { Context } from '../../other/context'\r\nimport SortPanel from './SortPanel'\r\n\r\nconst SortPanelContainer = () => {\r\n\r\n    const {sortBlock} = useContext(Context)\r\n\r\n    return (\r\n        <SortPanel sortBlock={sortBlock}/>\r\n    )\r\n}\r\n\r\nexport default SortPanelContainer","const SET_LIST = 'SET_LIST'\r\nconst SET_MIN_PRICE_FILTER = 'SET_MIN_PRICE_FILTER'\r\nconst SET_MAX_PRICE_FILTER = 'SET_MAX_PRICE_FILTER'\r\nconst SET_SORT_GROW_PRICE = 'SET_SORT_GROW_PRICE'\r\nconst SET_SORT_DIG_PRICE = 'SET_SORT_DIG_PRICE'\r\nconst SET_SORT_TIME = 'SET_SORT_TIME'\r\nconst SET_FILTER = 'SET_FILTER'\r\nconst SET_COMPANY = 'SET_COMPANY'\r\nconst SET_COMPANY_FILTER = 'SET_COMPANY_FILTER'\r\nconst SET_FILTER_TRAVEL = 'SET_FILTER_TRAVEL'\r\nconst SET_FILTER_TRAVEL_ACTION = 'SET_FILTER_TRAVEL_ACTION'\r\n\r\nconst listReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case SET_LIST: {\r\n            return {\r\n                ...state,\r\n                data: action.result\r\n            }\r\n        }\r\n        case SET_MAX_PRICE_FILTER: {\r\n            return {\r\n                ...state,\r\n                sortBlock: {\r\n                    ...state.sortBlock,\r\n                    price: {\r\n                        ...state.sortBlock.price,\r\n                        maxPrice: /\\d/.test(action.value) ? action.value : ''\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SET_MIN_PRICE_FILTER: {\r\n            return {\r\n                ...state,\r\n                sortBlock: {\r\n                    ...state.sortBlock,\r\n                    price: {\r\n                        ...state.sortBlock.price,\r\n                        minPrice: /\\d/.test(action.value) ? action.value : ''\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SET_FILTER: {\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n\r\n                    flights: [...state.data.flights.filter(item => state.sortBlock.price.minPrice <= item.flight.price.total.amount\r\n                        && state.sortBlock.price.maxPrice >= item.flight.price.total.amount)]\r\n                }\r\n            }\r\n        }\r\n        case SET_SORT_GROW_PRICE: {\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    flights: [...state.data.flights.sort((a, b) => a.flight.price.total.amount - b.flight.price.total.amount)]\r\n                }\r\n            }\r\n        }\r\n        case SET_SORT_DIG_PRICE: {\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    flights: [...state.data.flights.sort((a, b) => b.flight.price.total.amount - a.flight.price.total.amount)]\r\n                }\r\n            }\r\n        }\r\n        case SET_SORT_TIME: {\r\n            function getDelta(firstDate, secondDate) {\r\n                let onePice = Date.parse(firstDate)\r\n                let oneDate = new Date(onePice)\r\n                let oneDay = oneDate.getDate()\r\n                let firstTime = oneDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }).split(':')\r\n\r\n                let twoPice = Date.parse(secondDate)\r\n                let twoDate = new Date(twoPice)\r\n                let twoDay = twoDate.getDate()\r\n                let secondTime = twoDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }).split(':')\r\n\r\n                let deltaHours = secondTime[0] - firstTime[0]\r\n                let deltaMinutes = secondTime[1] - firstTime[1]\r\n                let deltaDay = twoDay - oneDay\r\n\r\n                if (deltaMinutes < 0) {\r\n                    deltaHours = deltaHours - 1\r\n                    deltaMinutes = 60 + deltaMinutes\r\n                }\r\n\r\n                if (deltaHours < 0) {\r\n                    deltaHours = 24 + deltaHours\r\n                }\r\n\r\n                return deltaHours * 60 + deltaMinutes\r\n            }\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    flights: [...state.data.flights.sort((a, b) => getDelta(a.flight.legs[0].segments[0].departureDate, a.flight.legs[0].segments[a.flight.legs[0].segments.length - 1].arrivalDate)\r\n                        - getDelta(b.flight.legs[0].segments[0].departureDate, b.flight.legs[0].segments[b.flight.legs[0].segments.length - 1].arrivalDate))]\r\n                }\r\n            }\r\n        }\r\n        case SET_COMPANY: {\r\n            return {\r\n                ...state,\r\n                sortBlock: {\r\n                    ...state.sortBlock,\r\n                    companies: [...state.sortBlock.companies.map(item => item.company == action.value\r\n                        ? {\r\n                            ...item,\r\n                            checked: !item.checked\r\n                        }\r\n                        : item)]\r\n                }\r\n            }\r\n        }\r\n        case SET_COMPANY_FILTER: {\r\n            const checkArr = (arr1, arr2) => {\r\n                for (let i = 0; i < arr1.length; i++) {\r\n                    if (arr1[i].company == arr2.flight.carrier.caption && arr1[i].checked) return arr2\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    flights: [...state.data.flights.filter(item => state.sortBlock.companies.every(el => !el.checked)\r\n                        ? item\r\n                        : checkArr(state.sortBlock.companies, item)\r\n                    )\r\n                    ]\r\n                },\r\n            }\r\n        }\r\n        case SET_FILTER_TRAVEL: {\r\n            return {\r\n                ...state,\r\n                sortBlock: {\r\n                    ...state.sortBlock,\r\n                    filter: [...state.sortBlock.filter.map(item => item.segments == action.value\r\n                        ? {\r\n                            ...item,\r\n                            checked: !item.checked\r\n                        }\r\n                        : item)]\r\n                }\r\n            }\r\n        }\r\n        case SET_FILTER_TRAVEL_ACTION: {\r\n            const checkArr = (arr1, arr2) => {\r\n                for (let i = 0; i < arr1.length; i++) {\r\n                    if (arr1[i].segments == (arr2.flight.legs[0].segments.length + arr2.flight.legs[1].segments.length) && arr1[i].checked) return arr2\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    flights: [...state.data.flights.filter(item => state.sortBlock.filter.every(el => !el.checked)\r\n                        ? item\r\n                        : checkArr(state.sortBlock.filter, item)\r\n                    )\r\n                    ]\r\n                },\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setListAC = (result) => {\r\n    return {\r\n        type: SET_LIST,\r\n        result\r\n    }\r\n}\r\n\r\nexport const setFilterMinPriceAC = (value) => {\r\n    return {\r\n        type: SET_MIN_PRICE_FILTER,\r\n        value\r\n    }\r\n}\r\n\r\nexport const setFilterMaxPriceAC = (value) => {\r\n    return {\r\n        type: SET_MAX_PRICE_FILTER,\r\n        value\r\n    }\r\n}\r\n\r\nexport const setFilterAC = () => {\r\n    return {\r\n        type: SET_FILTER\r\n    }\r\n}\r\n\r\nexport const setSortGrowPriceAC = () => {\r\n    return {\r\n        type: SET_SORT_GROW_PRICE\r\n    }\r\n}\r\n\r\nexport const setSortDigPriceAC = () => {\r\n    return {\r\n        type: SET_SORT_DIG_PRICE\r\n    }\r\n}\r\n\r\nexport const setSortTimeAC = () => {\r\n    return {\r\n        type: SET_SORT_TIME\r\n    }\r\n}\r\n\r\nexport const setCompanyAC = (value) => {\r\n    return {\r\n        type: SET_COMPANY,\r\n        value\r\n    }\r\n}\r\n\r\nexport const setCompanyFilterAC = () => {\r\n    return {\r\n        type: SET_COMPANY_FILTER\r\n    }\r\n}\r\n\r\nexport const setFilterTravelAC = (value) => {\r\n    return {\r\n        type: SET_FILTER_TRAVEL,\r\n        value\r\n    }\r\n}\r\n\r\nexport const setFilterTravelActionAC = () => {\r\n    return {\r\n        type: SET_FILTER_TRAVEL_ACTION,\r\n    }\r\n}\r\n\r\nexport default listReducer\r\n","import { useEffect, useReducer } from 'react';\nimport style from './App.module.css';\nimport ListPanelContainer from './components/ListPanel/ListPanelContainer';\nimport SortPanelContainer from './components/SortPanel/SortPanelContainer';\nimport flights from './data/flights.json'\nimport { Context } from './other/context';\nimport listReducer, { setListAC, setFilterMaxPriceAC, setFilterMinPriceAC, setSortGrowPriceAC, setSortDigPriceAC, setSortTimeAC, setFilterAC, setCompanyAC, setCompanyFilterAC, setFilterTravelAC, setFilterTravelActionAC } from './redux/listReducer';\n\n\nfunction App() {\n\n  let defaultState = {\n    data: [],\n    sortBlock: {\n      filter: [\n        {segments: 3, checked: false, description:'- 1 пересадка'},\n        {segments: 2, checked: false, description:'- без пересадок'}\n      ],\n      price: {\n        minPrice: 0,\n        maxPrice: 1000000,\n      },\n      companies: [\n        { company: 'LOT Polish Airlines', checked: false },\n        { company: 'Аэрофлот - российские авиалинии', checked: false },\n        { company: 'Air France', checked: false },\n      ]\n    }\n  }\n\n  const [state, dispatch] = useReducer(listReducer, defaultState)\n\n  useEffect(() => {\n    dispatch(setListAC(flights.result))\n  }, [])\n\n  const sortGrowPrice = () => {\n    dispatch(setSortGrowPriceAC())\n  }\n\n  const sortDigPrice = () => {\n    dispatch(setSortDigPriceAC())\n  }\n\n  const sortTime = () => {\n    dispatch(setSortTimeAC())\n  }\n\n  const transferFilter = (event) => {\n    let data = event.target.value\n    dispatch(setFilterTravelAC(data))\n  }\n  \n  const minPriceFilter = (event) => {\n    let data = +event.currentTarget.value\n    dispatch(setFilterMinPriceAC(data))\n  }\n  \n  const maxPriceFilter = (event) => {\n    let data = +event.currentTarget.value\n    dispatch(setFilterMaxPriceAC(data))\n  }\n  \n  \n  const companyFilter = (event) => {\n    let value = event.target.value\n    dispatch(setCompanyAC(value))\n  }\n  \n  useEffect(()=> {\n    dispatch(setListAC(flights.result))    \n    dispatch(setFilterAC())\n    dispatch(setFilterTravelActionAC())\n    dispatch(setCompanyFilterAC())\n  }, [state.sortBlock])\n\n  return (\n\n    <Context.Provider value={{\n      data: state.data,\n      sortBlock: state.sortBlock,\n      minPriceFilter,\n      maxPriceFilter,\n      sortGrowPrice,\n      sortDigPrice,\n      sortTime,\n      companyFilter,\n      transferFilter\n    }}>\n      <div className={style.container}>\n       {/*  <button onClick={abc}>123</button> */}\n        <SortPanelContainer />\n        <ListPanelContainer />\n      </div>\n    </Context.Provider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2MA7R\",\"blue_text\":\"App_blue_text__1jF7j\",\"orange_text\":\"App_orange_text__16poT\",\"sortPanel\":\"App_sortPanel__3YxIL\",\"list_panel\":\"App_list_panel__YnGtv\",\"sort_block\":\"App_sort_block__KObsL\",\"company_block\":\"App_company_block__3wyjr\",\"filter_block\":\"App_filter_block__1qnG4\",\"price_block\":\"App_price_block__2OW2V\",\"sort_input\":\"App_sort_input__BCtwk\",\"company_input\":\"App_company_input__hiTsK\",\"filter_input\":\"App_filter_input__3DOMs\",\"price_input\":\"App_price_input__3Rdsf\",\"card_block\":\"App_card_block__2K5Yn\",\"card_block_header\":\"App_card_block_header__3L7Cc\",\"price_adult\":\"App_price_adult__2VeqH\",\"for_adult\":\"App_for_adult__jPkSA\",\"card_block_info\":\"App_card_block_info__RKm_g\",\"arrival_block\":\"App_arrival_block__2IbB-\",\"deport_block\":\"App_deport_block__1nKZr\",\"time_block\":\"App_time_block__12q4i\",\"transfer_message\":\"App_transfer_message__1L7e3\",\"line\":\"App_line__2RJhK\",\"card_btn_block\":\"App_card_btn_block__3s7LX\",\"card_btn\":\"App_card_btn__2VRN-\"};"],"sourceRoot":""}